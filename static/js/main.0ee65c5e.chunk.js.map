{"version":3,"sources":["MapboxMap.js","App.js","serviceWorker.js","index.js"],"names":["mapboxgl","accessToken","locations","world","center","bearing","pitch","zoom","nearby","office","speed","tv","rooms","jack","MapContainer","styled","div","_templateObject","Map","_templateObject2","MapActions","_templateObject3","ActionButton","button","_templateObject4","JackContainer","_templateObject5","Jack","img","attrs","src","_templateObject6","MapboxMap","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lng","lat","height","window","innerHeight","mode","prevProps","prevState","map","flyTo","setPaintProperty","_this2","_this$state","container","mapContainer","style","opacity","radius","on","addSource","type","url","coordinates","addLayer","id","source","data","paint","circle-radius","circle-radius-transition","duration","circle-opacity-transition","circle-color","geometry","layout","fill-color","fill-opacity","fill-opacity-transition","features","properties","title","text-field","text-color","text-opacity","text-halo-color","text-halo-width","text-opacity-transition","icon","icon-image","text-offset","text-size","text-anchor","line-join","line-cap","line-opacity","line-opacity-transition","line-color","line-width","animateMarker","timestamp","setTimeout","requestAnimationFrame","e","console","log","concat","lngLat","_this3","react_default","a","createElement","ref","el","className","onClick","setState","Component","AppContainer","App_templateObject","Header","h1","App_templateObject2","App_templateObject3","MainContainer","App_templateObject4","RightContainer","App_templateObject5","Address1","App_templateObject6","Address2","_templateObject7","Logo","_templateObject8","App","src_MapboxMap","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"y7CAOAA,IAASC,YAAc,2FAEvB,IAAMC,EAAY,CAChBC,MAAS,CACPC,OAAQ,EAAE,kBAAmB,oBAC7BC,QAAS,EACTC,MAAO,EACPC,KAAM,oBAERC,OAAU,CACRJ,OAAQ,EAAE,kBAAmB,mBAC7BC,QAAS,mBACTC,MAAO,EACPC,KAAM,IAERE,OAAU,CACRL,OAAQ,EAAE,kBAAmB,mBAC7BG,KAAM,kBACNF,QAAS,kBACTC,MAAO,EACPI,MAAO,IAETC,GAAM,CACJP,OAAQ,EAAE,kBAAmB,mBAC7BG,KAAM,kBACNF,SAAU,kBACVC,MAAO,GACPI,MAAO,IAETE,MAAS,CACPR,OAAQ,EAAE,iBAAkB,mBAC5BG,KAAM,mBACNF,QAAS,mBACTC,MAAO,GACPI,MAAO,IAETG,KAAQ,CACNT,OAAQ,EAAE,kBAAmB,mBAC7BG,KAAM,mBACNF,QAAS,kBACTC,MAAO,EACPI,MAAO,KAILI,EAAeC,IAAOC,IAAVC,KAIZC,EAAMH,IAAOC,IAAVG,KAIHC,EAAaL,IAAOC,IAAVK,KAUVC,EAAeP,IAAOQ,OAAVC,KAeZC,EAAgBV,IAAOC,IAAVU,KAMbC,EAAOZ,IAAOa,IAAIC,MAAM,CAC5BC,IAAK,YADMf,CAAHgB,KAycKC,cA7bb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,KAAM,kBACNC,IAAK,mBACLpC,KAAM,GACNqC,OAAQC,OAAOC,YACfC,KAAM,SAPSb,kFAWAc,EAAWC,GAC5BZ,KAAKa,IAAIC,MAAMjD,EAAUmC,KAAKI,MAAMM,OAEZ,UAApBV,KAAKI,MAAMM,MACbV,KAAKa,IAAIE,iBAAiB,MAAO,eAAgB,IACjDf,KAAKa,IAAIE,iBAAiB,MAAO,eAAgB,IACjDf,KAAKa,IAAIE,iBAAiB,MAAO,eAAgB,IACjDf,KAAKa,IAAIE,iBAAiB,MAAO,eAAgB,IACjDf,KAAKa,IAAIE,iBAAiB,SAAU,eAAgB,KAEpDf,KAAKa,IAAIE,iBAAiB,MAAO,eAAgB,GACjDf,KAAKa,IAAIE,iBAAiB,MAAO,eAAgB,GACjDf,KAAKa,IAAIE,iBAAiB,MAAO,eAAgB,GACjDf,KAAKa,IAAIE,iBAAiB,MAAO,eAAgB,GACjDf,KAAKa,IAAIE,iBAAiB,SAAU,eAAgB,IAG9B,SAApBf,KAAKI,MAAMM,MACbV,KAAKa,IAAIE,iBAAiB,OAAQ,eAAgB,IAClDf,KAAKa,IAAIE,iBAAiB,QAAS,eAAgB,MAEnDf,KAAKa,IAAIE,iBAAiB,OAAQ,eAAgB,GAClDf,KAAKa,IAAIE,iBAAiB,QAAS,eAAgB,IAG7B,WAApBf,KAAKI,MAAMM,KACbV,KAAKa,IAAIE,iBAAiB,gBAAiB,eAAgB,GAE3Df,KAAKa,IAAIE,iBAAiB,gBAAiB,eAAgB,+CAI3C,IAAAC,EAAAhB,KAAAiB,EACSjB,KAAKI,MAAxBC,EADUY,EACVZ,IAAKC,EADKW,EACLX,IAAKpC,EADA+C,EACA/C,KAElB8B,KAAKa,IAAM,IAAIlD,IAASkB,IAAI,CAC1BqC,UAAWlB,KAAKmB,aAChBC,MAAO,mCACPrD,OAAQ,CAACsC,EAAKC,GACdpC,SAGF,IAEImD,EADiB,EAGjBC,EADgB,EAIpBtB,KAAKa,IAAIU,GAAG,OAAQ,WAClBP,EAAKH,IAAIW,UAAU,YAAa,CAC9BC,KAAQ,QACRC,IAAO,kBACPC,YAAe,CACb,EAAE,cAAe,eACjB,EAAE,cAAe,eACjB,EAAE,cAAe,eACjB,EAAE,cAAe,kBAIrBX,EAAKH,IAAIe,SAAS,CAChBC,GAAM,YACNJ,KAAQ,SACRK,OAAU,cAIZd,EAAKH,IAAIW,UAAU,QAAS,CAC1BC,KAAQ,UACRM,KAAQ,CACNN,KAAQ,QACRE,YAAe,EAAE,kBAAmB,uBAIxCX,EAAKH,IAAIe,SAAS,CAChBC,GAAM,QACNC,OAAU,QACVL,KAAQ,SACRO,MAAS,CACPC,gBApCc,EAqCdC,2BAA4B,CAAEC,SAAU,GACxCC,4BAA6B,CAAED,SAAU,GACzCE,eAAgB,aAIpBrB,EAAKH,IAAIe,SAAS,CAChBC,GAAM,SACNC,OAAU,QACVL,KAAQ,SACRO,MAAS,CACPC,gBAhDc,EAiDdI,eAAgB,aAIpBrB,EAAKH,IAAIe,SAAS,CAChBC,GAAM,MACNJ,KAAQ,OACRK,OAAU,CACRL,KAAQ,UACRM,KAAQ,CACNN,KAAQ,UACRa,SAAY,CACVb,KAAQ,UACRE,YAAe,CAAC,CAAC,EAAE,kBAAmB,oBACtC,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,mBACrB,EAAE,gBAAiB,mBACnB,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,yBAI3BY,OAAU,GACVP,MAAS,CACPQ,aAAc,UACdC,eAAgB,EAChBC,0BAA2B,CAAEP,SAAU,QAI3CnB,EAAKH,IAAIe,SAAS,CAChBC,GAAM,MACNJ,KAAQ,OACRK,OAAU,CACRL,KAAQ,UACRM,KAAQ,CACNN,KAAQ,UACRa,SAAY,CACVb,KAAQ,UACRE,YAAe,CAAC,CAAC,EAAE,kBAAmB,mBACtC,EAAE,kBAAmB,kBACrB,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,wBAI3BY,OAAU,GACVP,MAAS,CACPQ,aAAc,UACdC,eAAgB,EAChBC,0BAA2B,CAAEP,SAAU,QAI3CnB,EAAKH,IAAIe,SAAS,CAChBC,GAAM,MACNJ,KAAQ,OACRK,OAAU,CACRL,KAAQ,UACRM,KAAQ,CACNN,KAAQ,UACRa,SAAY,CACVb,KAAQ,UACRE,YAAe,CAAC,CAAC,EAAE,kBAAmB,oBACtC,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,yBAI3BY,OAAU,GACVP,MAAS,CACPQ,aAAc,UACdC,eAAgB,EAChBC,0BAA2B,CAAEP,SAAU,QAI3CnB,EAAKH,IAAIe,SAAS,CAChBC,GAAM,MACNJ,KAAQ,OACRK,OAAU,CACRL,KAAQ,UACRM,KAAQ,CACNN,KAAQ,UACRa,SAAY,CACVb,KAAQ,UACRE,YAAe,CAAC,CAAC,EAAE,kBAAmB,mBACtC,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,yBAI3BY,OAAU,GACVP,MAAS,CACPQ,aAAc,UACdC,eAAgB,EAChBC,0BAA2B,CAAEP,SAAU,QAI3CnB,EAAKH,IAAIe,SAAS,CAChBC,GAAM,SACNJ,KAAQ,SACRK,OAAU,CACRL,KAAQ,UACRM,KAAQ,CACNN,KAAQ,oBACRkB,SAAY,CAAC,CACXlB,KAAQ,UACRa,SAAY,CACVb,KAAQ,QACRE,YAAe,EAAE,kBAAmB,oBAEtCiB,WAAc,CACZC,MAAS,SAEV,CACDpB,KAAQ,UACRa,SAAY,CACVb,KAAQ,QACRE,YAAe,EAAE,kBAAmB,qBAEtCiB,WAAc,CACZC,MAAS,aAEV,CACDpB,KAAQ,UACRa,SAAY,CACVb,KAAQ,QACRE,YAAe,EAAE,kBAAmB,qBAEtCiB,WAAc,CACZC,MAAS,aAEV,CACDpB,KAAQ,UACRa,SAAY,CACVb,KAAQ,QACRE,YAAe,EAAE,kBAAmB,oBAEtCiB,WAAc,CACZC,MAAS,oBAKjBN,OAAU,CACRO,aAAc,WAEhBd,MAAS,CACPe,aAAc,QACdC,eAAgB,EAChBC,kBAAmB,OACnBC,kBAAmB,EACnBC,0BAA2B,CAAEhB,SAAU,QAI3CnB,EAAKH,IAAIe,SAAS,CAChBC,GAAM,gBACNJ,KAAQ,SACRK,OAAU,CACRL,KAAQ,UACRM,KAAQ,CACNN,KAAQ,oBACRkB,SAAY,CAAC,CACXlB,KAAQ,UACRa,SAAY,CACVb,KAAQ,QACRE,YAAe,EAAE,UAAW,YAE9BiB,WAAc,CACZC,MAAS,uBACTO,KAAQ,eAET,CACD3B,KAAQ,UACRa,SAAY,CACVb,KAAQ,QACRE,YAAe,EAAE,UAAW,WAE9BiB,WAAc,CACZC,MAAS,wBAEV,CACDpB,KAAQ,UACRa,SAAY,CACVb,KAAQ,QACRE,YAAe,EAAE,UAAW,YAE9BiB,WAAc,CACZC,MAAS,oBAEV,CACDpB,KAAQ,UACRa,SAAY,CACVb,KAAQ,QACRE,YAAe,EAAE,UAAW,YAE9BiB,WAAc,CACZC,MAAS,mBAKjBN,OAAU,CACRO,aAAc,UACdO,aAAc,YACdC,cAAe,CAAC,EAAG,IACnBC,YAAa,GACbC,cAAe,OAEjBxB,MAAS,CACPe,aAAc,UACdC,eAAgB,EAChBC,kBAAmB,OACnBC,kBAAmB,EACnBC,0BAA2B,CAAEhB,SAAU,QAK3CnB,EAAKH,IAAIe,SAAS,CAChBC,GAAM,OACNJ,KAAQ,OACRK,OAAU,CACRL,KAAQ,UACRM,KAAQ,CACNN,KAAQ,UACRa,SAAY,CACVb,KAAQ,UACRE,YAAe,CAAC,CAAC,EAAE,kBAAmB,mBACtC,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,oBACrB,EAAE,kBAAmB,wBAI3BY,OAAU,GACVP,MAAS,CACPQ,aAAc,UACdC,eAAgB,EAChBC,0BAA2B,CAAEP,SAAU,QAK3CnB,EAAKH,IAAIe,SAAS,CAChBC,GAAM,QACNJ,KAAQ,OACRK,OAAU,CACRL,KAAQ,UACRM,KAAQ,CACNN,KAAQ,UACRmB,WAAc,GACdN,SAAY,CACVb,KAAQ,aACRE,YAAe,CACb,EAAE,kBAAmB,oBACrB,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,mBACrB,EAAE,kBAAmB,wBAK7BY,OAAU,CACRkB,YAAa,QACbC,WAAY,SAEd1B,MAAS,CACP2B,eAAgB,EAChBC,0BAA2B,CAAEzB,SAAU,KACvC0B,aAAc,UACdC,aAAc,MAKI,SAAhBC,EAAiBC,GACrBC,WAAW,WACTC,sBAAsBH,GAEtBzC,IA/UU,GA+UaA,GApVP,IAqVhBD,GAAY,GArVI,KAuVD,IACbC,EArVY,EAsVZD,EAxVa,GA2VfL,EAAKH,IAAIE,iBAAiB,QAAS,gBAAiBO,GACpDN,EAAKH,IAAIE,iBAAiB,QAAS,iBAAkBM,IAEpD,IA/Ve,IAoWpB0C,GAEA/C,EAAKH,IAAIU,GAAG,QAAS,SAAC4C,GACpBC,QAAQC,IAAR,IAAAC,OAAgBH,EAAEI,OAAOlE,IAAzB,MAAAiE,OAAiCH,EAAEI,OAAOjE,IAA1C,2CAKG,IAAAkE,EAAAxE,KACCO,EAAWP,KAAKI,MAAhBG,OAER,OACEkE,EAAAC,EAAAC,cAAClG,EAAD,KACEgG,EAAAC,EAAAC,cAAC9F,EAAD,CAAKuC,MAAO,CAAEb,OAAQA,GAAUqE,IAAK,SAAAC,GAAE,OAAIL,EAAKrD,aAAe0D,GAAIC,UAAU,mCAC7EL,EAAAC,EAAAC,cAAC5F,EAAD,KACE0F,EAAAC,EAAAC,cAAC1F,EAAD,CAAc8F,QAAS,WAAQP,EAAKQ,SAAS,CAAEtE,KAAM,aAArD,iBAGA+D,EAAAC,EAAAC,cAAC1F,EAAD,CAAc8F,QAAS,WAAQP,EAAKQ,SAAS,CAAEtE,KAAM,aAArD,mBAGA+D,EAAAC,EAAAC,cAAC1F,EAAD,CAAc8F,QAAS,WAAQP,EAAKQ,SAAS,CAAEtE,KAAM,SAArD,eAGA+D,EAAAC,EAAAC,cAAC1F,EAAD,CAAc8F,QAAS,WAAQP,EAAKQ,SAAS,CAAEtE,KAAM,YAArD,iBAGA+D,EAAAC,EAAAC,cAACvF,EAAD,CAAe2F,QAAS,WAAQP,EAAKQ,SAAS,CAAEtE,KAAM,WACpD+D,EAAAC,EAAAC,cAACrF,EAAD,gBAvbY2F,gjCChGxB,IAAMC,EAAexG,IAAOC,IAAVwG,KAcZC,GARQ1G,IAAO2G,GAAVC,KAQI5G,IAAOC,IAAV4G,MAONC,EAAgB9G,IAAOC,IAAV8G,KAIbC,EAAiBhH,IAAOC,IAAVgH,KAMdC,EAAWlH,IAAOC,IAAVkH,KAIRC,EAAWpH,IAAOC,IAAVoH,KAGRC,EAAMtH,IAAOa,IAAIC,MAAM,CACzBC,IAAK,YADGf,CAAFuH,KAgCKC,MAxBf,WACE,OACEzB,EAAAC,EAAAC,cAACO,EAAD,KACET,EAAAC,EAAAC,cAACS,EAAD,KACEX,EAAAC,EAAAC,cAACqB,EAAD,MACAvB,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAACiB,EAAD,oBAGAnB,EAAAC,EAAAC,cAACmB,EAAD,qBAGArB,EAAAC,EAAAC,cAACmB,EAAD,kBAKJrB,EAAAC,EAAAC,cAACa,EAAD,KACAf,EAAAC,EAAAC,cAACwB,EAAD,SCzDcC,QACW,cAA7B5F,OAAO6F,SAASC,UAEe,UAA7B9F,OAAO6F,SAASC,UAEhB9F,OAAO6F,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0ee65c5e.chunk.js","sourcesContent":["/* See https://github.com/mapbox/mapbox-react-examples/ for full example */\nimport { Component } from 'react';\nimport React from 'react';\nimport styled from 'styled-components';\nimport ReactSearchBox from 'react-search-box'\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst locations = {\n  \"world\": {\n    center: [-73.98939962913566, 40.739279870691945],\n    bearing: 0,\n    pitch: 0,\n    zoom: 12.534215934726939\n  },\n  \"nearby\": {\n    center: [-73.99006854421674, 40.73909091037265],\n    bearing: 28.942095266613023,\n    pitch: 0,\n    zoom: 16\n  },\n  \"office\": {\n    center: [-73.98935152618789, 40.73936415708215],\n    zoom: 20.17566570344819,\n    bearing: 119.1032866973844,\n    pitch: 0,\n    speed: 0.8\n  },\n  \"tv\": {\n    center: [-73.98942513163618, 40.73933588953602],\n    zoom: 22.99570585184369,\n    bearing: -150.8111894137931,\n    pitch: 30,\n    speed: 0.8\n  },\n  \"rooms\": {\n    center: [-73.9895738458099, 40.73932453703276],\n    zoom: 21.412606769796117,\n    bearing: 101.98881058620714,\n    pitch: 40,\n    speed: 0.8\n  },\n  \"jack\": {\n    center: [-73.98943057776535, 40.73923886388985],\n    zoom: 22.212606769796117,\n    bearing: 119.1032866973844,\n    pitch: 0,\n    speed: 0.8\n  }\n}\n\nconst MapContainer = styled.div`\n  height: 100%;\n`;\n\nconst Map = styled.div`\n  height: 100%;\n`;\n\nconst MapActions = styled.div`\n  height: 100px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst ActionButton = styled.button`\n  background-color: rgb(22, 115, 230);\n  font: 600 18px proxima-nova, \"Proxima Nova\", Arial, Helvetica, sans-serif;\n  border: 1px solid #1673E6;\n  height: 60px;\n  width 325px;\n  color: white;\n  text-align: center;\n  justify-content: center;\n  align-items:center;\n  border-radius: 3px;\n  cursor: pointer;\n  box-shadow: 10px 10px 21px -9px rgba(0,0,0,0.39);\n`;\n\nconst JackContainer = styled.div`\n  overflow: hidden;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n`;\nconst Jack = styled.img.attrs({\n  src: 'jack.jpg'\n})`\n  display: inline;\n  margin: 0 auto;\n  height: 100%;\n  width: auto;\n  cursor: pointer;\n`;\n\nclass MapboxMap extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -73.98939962913566,\n      lat: 40.739279870691945,\n      zoom: 11,\n      height: window.innerHeight,\n      mode: \"world\"\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.map.flyTo(locations[this.state.mode]);\n\n    if (this.state.mode === \"rooms\") {\n      this.map.setPaintProperty('ml1', 'fill-opacity', 0.4);\n      this.map.setPaintProperty('ml2', 'fill-opacity', 0.4);\n      this.map.setPaintProperty('ml3', 'fill-opacity', 0.4);\n      this.map.setPaintProperty('ml4', 'fill-opacity', 0.4);\n      this.map.setPaintProperty('labels', 'text-opacity', 1);\n    } else {\n      this.map.setPaintProperty('ml1', 'fill-opacity', 0);\n      this.map.setPaintProperty('ml2', 'fill-opacity', 0);\n      this.map.setPaintProperty('ml3', 'fill-opacity', 0);\n      this.map.setPaintProperty('ml4', 'fill-opacity', 0);\n      this.map.setPaintProperty('labels', 'text-opacity', 0);\n    }\n\n    if (this.state.mode === \"jack\") {\n      this.map.setPaintProperty('jack', 'fill-opacity', 0.6);\n      this.map.setPaintProperty('route', 'line-opacity', 0.6);\n    } else {\n      this.map.setPaintProperty('jack', 'fill-opacity', 0);\n      this.map.setPaintProperty('route', 'line-opacity', 0);\n    }\n\n    if (this.state.mode === \"nearby\") {\n      this.map.setPaintProperty('nearby-labels', 'text-opacity', 1);\n    } else {\n      this.map.setPaintProperty('nearby-labels', 'text-opacity', 0);\n    }\n  };\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: [lng, lat],\n      zoom\n    });\n\n    var framesPerSecond = 15;\n    var initialOpacity = 1\n    var opacity = initialOpacity;\n    var initialRadius = 8;\n    var radius = initialRadius;\n    var maxRadius = 18;\n\n    this.map.on('load', () => {\n      this.map.addSource(\"floorplan\", {\n        \"type\": \"image\",\n        \"url\": \"map_rotated.png\",\n        \"coordinates\": [\n          [-73.9899761491, 40.7397204722],\n          [-73.9887899627, 40.7397204722],\n          [-73.9887899627, 40.7390271158],\n          [-73.9899761491, 40.7390271158]\n        ]\n      });\n\n      this.map.addLayer({\n        \"id\": \"floorplan\",\n        \"type\": \"raster\",\n        \"source\": \"floorplan\"\n      });\n\n      // Add a source and layer displaying a point which will be animated in a circle.\n      this.map.addSource('point', {\n        \"type\": \"geojson\",\n        \"data\": {\n          \"type\": \"Point\",\n          \"coordinates\": [-73.98942367062357, 40.739338685581686]\n        }\n      });\n\n      this.map.addLayer({\n        \"id\": \"point\",\n        \"source\": \"point\",\n        \"type\": \"circle\",\n        \"paint\": {\n          \"circle-radius\": initialRadius,\n          \"circle-radius-transition\": { duration: 0 },\n          \"circle-opacity-transition\": { duration: 0 },\n          \"circle-color\": \"#007cbf\"\n        }\n      });\n\n      this.map.addLayer({\n        \"id\": \"point1\",\n        \"source\": \"point\",\n        \"type\": \"circle\",\n        \"paint\": {\n          \"circle-radius\": initialRadius,\n          \"circle-color\": \"#007cbf\"\n        }\n      });\n\n      this.map.addLayer({\n        'id': 'ml1',\n        'type': 'fill',\n        'source': {\n          'type': 'geojson',\n          'data': {\n            'type': 'Feature',\n            'geometry': {\n              'type': 'Polygon',\n              'coordinates': [[[-73.98954559426502, 40.739455903329514],\n              [-73.98949948681687, 40.73943644855092],\n              [-73.98952046984081, 40.73935862936759],\n              [-73.989571823053, 40.73936636945382],\n              [-73.98954669862876, 40.73945485737036],\n              [-73.98954559426502, 40.739455903329514]]]\n            }\n          }\n        },\n        'layout': {},\n        'paint': {\n          'fill-color': '#68d807',\n          'fill-opacity': 0,\n          'fill-opacity-transition': { duration: 1000 }\n        }\n      });\n\n      this.map.addLayer({\n        'id': 'ml2',\n        'type': 'fill',\n        'source': {\n          'type': 'geojson',\n          'data': {\n            'type': 'Feature',\n            'geometry': {\n              'type': 'Polygon',\n              'coordinates': [[[-73.98957220947315, 40.73936587527649],\n              [-73.98952061914088, 40.7393574387504],\n              [-73.98953435181829, 40.73930878805737],\n              [-73.98958668444226, 40.73931694337739],\n              [-73.98957220947315, 40.73936587527649]]]\n            }\n          }\n        },\n        'layout': {},\n        'paint': {\n          'fill-color': '#ff2116',\n          'fill-opacity': 0,\n          'fill-opacity-transition': { duration: 1000 }\n        }\n      });\n\n      this.map.addLayer({\n        'id': 'ml3',\n        'type': 'fill',\n        'source': {\n          'type': 'geojson',\n          'data': {\n            'type': 'Feature',\n            'geometry': {\n              'type': 'Polygon',\n              'coordinates': [[[-73.98953597112634, 40.739307953727064],\n              [-73.98954870885878, 40.73925850065439],\n              [-73.98960128147725, 40.73926683776136],\n              [-73.98958621355538, 40.739315932438416]]]\n            }\n          }\n        },\n        'layout': {},\n        'paint': {\n          'fill-color': '#ff2116',\n          'fill-opacity': 0,\n          'fill-opacity-transition': { duration: 1000 }\n        }\n      });\n\n      this.map.addLayer({\n        'id': 'ml4',\n        'type': 'fill',\n        'source': {\n          'type': 'geojson',\n          'data': {\n            'type': 'Feature',\n            'geometry': {\n              'type': 'Polygon',\n              'coordinates': [[[-73.98954974108402, 40.73925748813599],\n              [-73.98956744310185, 40.73919299147062],\n              [-73.98961836468702, 40.73921517384136],\n              [-73.98960311420916, 40.739266112109306]]]\n            }\n          }\n        },\n        'layout': {},\n        'paint': {\n          'fill-color': '#ff8400',\n          'fill-opacity': 0,\n          'fill-opacity-transition': { duration: 1000 }\n        }\n      });\n\n      this.map.addLayer({\n        'id': 'labels',\n        'type': 'symbol',\n        'source': {\n          'type': 'geojson',\n          \"data\": {\n            \"type\": \"FeatureCollection\",\n            \"features\": [{\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [-73.98953681991519, 40.73939970220445]\n              },\n              \"properties\": {\n                \"title\": \"Open\",\n              }\n            }, {\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [-73.98955471971007, 40.739340049407474]\n              },\n              \"properties\": {\n                \"title\": \"Occupied\",\n              }\n            }, {\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [-73.98956846602674, 40.739290385721944]\n              },\n              \"properties\": {\n                \"title\": \"Occupied\",\n              }\n            }, {\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [-73.98958165688448, 40.73923386578531]\n              },\n              \"properties\": {\n                \"title\": \"Open (13min)\",\n              }\n            }]\n          }\n        },\n        'layout': {\n          \"text-field\": \"{title}\",\n        },\n        'paint': {\n          'text-color': 'black',\n          'text-opacity': 0,\n          'text-halo-color': \"#fff\",\n          'text-halo-width': 2,\n          'text-opacity-transition': { duration: 1000 }\n        }\n      });\n\n      this.map.addLayer({\n        'id': 'nearby-labels',\n        'type': 'symbol',\n        'source': {\n          'type': 'geojson',\n          \"data\": {\n            \"type\": \"FeatureCollection\",\n            \"features\": [{\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [-73.990446, 40.736543]\n              },\n              \"properties\": {\n                \"title\": \"Union Square\\nSubway\",\n                \"icon\": \"rail-metro\"\n              }\n            }, {\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [-73.992369, 40.742370]\n              },\n              \"properties\": {\n                \"title\": \"Outback\\nSteakhouse\",\n              }\n            }, {\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [-73.988512, 40.738448]\n              },\n              \"properties\": {\n                \"title\": \"Gramercy Tavern\",\n              }\n            }, {\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [-73.988183, 40.741468]\n              },\n              \"properties\": {\n                \"title\": \"Shake Shack\",\n              }\n            }]\n          }\n        },\n        'layout': {\n          \"text-field\": \"{title}\",\n          \"icon-image\": \"{icon}-11\",\n          \"text-offset\": [0, 0.6],\n          \"text-size\": 24,\n          \"text-anchor\": \"top\"\n        },\n        'paint': {\n          'text-color': '#114c99',\n          'text-opacity': 0,\n          'text-halo-color': \"#fff\",\n          'text-halo-width': 2,\n          'text-opacity-transition': { duration: 1000 },\n        }\n      });\n\n\n      this.map.addLayer({\n        'id': 'jack',\n        'type': 'fill',\n        'source': {\n          'type': 'geojson',\n          'data': {\n            'type': 'Feature',\n            'geometry': {\n              'type': 'Polygon',\n              'coordinates': [[[-73.98940941644133, 40.73915429657387],\n              [-73.98941376115552, 40.73914840633526],\n              [-73.98942568961334, 40.73915305406223],\n              [-73.98942167772744, 40.739159308928464],\n              [-73.98940941644133, 40.73915429657387]]]\n            }\n          }\n        },\n        'layout': {},\n        'paint': {\n          'fill-color': '#61be10',\n          'fill-opacity': 0,\n          'fill-opacity-transition': { duration: 1000 }\n        }\n      });\n\n\n      this.map.addLayer({\n        \"id\": \"route\",\n        \"type\": \"line\",\n        \"source\": {\n          \"type\": \"geojson\",\n          \"data\": {\n            \"type\": \"Feature\",\n            \"properties\": {},\n            \"geometry\": {\n              \"type\": \"LineString\",\n              \"coordinates\": [\n                [-73.98942367062357, 40.739338685581686],\n                [-73.98939595256763, 40.73932537572796],\n                [-73.98950386446162, 40.73917584154643],\n                [-73.98942676083836, 40.73914303251928],\n                [-73.98942075732752, 40.739151171625565]\n              ]\n            }\n          }\n        },\n        \"layout\": {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\"\n        },\n        \"paint\": {\n          \"line-opacity\": 0,\n          'line-opacity-transition': { duration: 1000 },\n          \"line-color\": \"#61be10\",\n          \"line-width\": 8\n        }\n      });\n\n\n      const animateMarker = (timestamp) => {\n        setTimeout(() => {\n          requestAnimationFrame(animateMarker);\n\n          radius += (maxRadius - radius) / framesPerSecond;\n          opacity -= (.9 / framesPerSecond);\n\n          if (opacity <= 0) {\n            radius = initialRadius;\n            opacity = initialOpacity;\n          }\n\n          this.map.setPaintProperty('point', 'circle-radius', radius);\n          this.map.setPaintProperty('point', 'circle-opacity', opacity);\n\n        }, 1000 / framesPerSecond);\n\n      }\n\n      // Start the animation.\n      animateMarker(0);\n\n      this.map.on(\"click\", (e) => {\n        console.log(`[${e.lngLat.lng}, ${e.lngLat.lat}]`);\n      })\n    });\n  }\n\n  render() {\n    const { height } = this.state;\n\n    return (\n      <MapContainer>\n        <Map style={{ height: height }} ref={el => this.mapContainer = el} className=\"absolute top right left bottom\" />\n        <MapActions>\n          <ActionButton onClick={() => { this.setState({ mode: 'nearby' }) }}>\n            Whats Nearby?\n            </ActionButton>\n          <ActionButton onClick={() => { this.setState({ mode: 'office' }) }}>\n            Office Overview\n            </ActionButton>\n          <ActionButton onClick={() => { this.setState({ mode: 'tv' }) }}>\n            Where Am I?\n            </ActionButton>\n          <ActionButton onClick={() => { this.setState({ mode: 'rooms' }) }}>\n            Meeting Rooms\n            </ActionButton>\n          <JackContainer onClick={() => { this.setState({ mode: 'jack' }) }}>\n            <Jack />\n          </JackContainer>\n        </MapActions>\n      </MapContainer>\n    );\n  }\n}\n\nexport default MapboxMap","import React from 'react';\nimport styled from 'styled-components';\nimport MapboxMap from './MapboxMap.js';\nimport './App.css';\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: Gilroy, \"Helvetica Neue\", Arial, Helvetica, sans-serif;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: left;\n  font-weight: bold;\n  font-color: #444;\n  padding: 20px;\n`;\n\nconst Header = styled.div`\n  border-bottom: 2px solid #aaa;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst MainContainer = styled.div`\n  height: 100%;\n`;\n\nconst RightContainer = styled.div`\n  padding: 10px;\n  text-align: right;\n  line-height: 20px;\n`;\n\nconst Address1 = styled.div`\n  font-weight: bold;\n`;\n\nconst Address2 = styled.div`\n`;\n\nconst Logo= styled.img.attrs({\n    src: 'logo.svg'\n  })`\n  width: 40px;\n  height: 40px;\n  padding: 20px;\n  `;\n\nfunction App() {\n  return (\n    <AppContainer>\n      <Header>\n        <Logo/>\n        <RightContainer>\n          <Address1>\n            SeatGeek HQ\n          </Address1>\n          <Address2>\n            902 Broadway\n          </Address2>\n          <Address2>\n            Floor 9\n          </Address2>\n        </RightContainer>\n        </Header>\n      <MainContainer>\n      <MapboxMap/>\n      </MainContainer>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}